{"ast":null,"code":"var _jsxFileName = \"/Users/zhangyuanhang/Desktop/sneaker-shop/src/pages/Login.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form'; // react-hook-form 需要在函数式组件中使用\n\nexport default function Login(props) {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = data => {\n    // 1. 阻止默认事件行为，组件帮助处理\n    // event.preventDefault();\n    // 2. 获取表单数据\n    // const formData = {\n    // email: this.emailRef.current.value,\n    // password: this.passwordRef.current.value\n    // }\n    console.log(data); // 3. 处理登录逻辑\n    // 4. 跳转到首页视图\n    // this.props.history.push('/');\n  };\n\n  console.log(errors);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    className: \"box login-box\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.email} && 'is-danger'`,\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"email\",\n    ref: register // value={this.state.email}\n    // onChange={this.handleChange}\n    // ref={this.emailRef} \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 33\n    }\n  }, \"email is required\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    placeholder: \"Password\",\n    name: \"password\",\n    ref: register // value={this.state.password}\n    // onChange={this.handleChange}\n    // ref={this.passwordRef} \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, \"password is required\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-fullwidth is-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Login\"))));\n}\n; // class Login extends React.Component {\n//   // 受控组件和非受控组件\n//   // State\n//   // 可以在constructor中用this.state = {}定义，也可以在外部用state = {}定义\n//   // constructor() {\n//   //   super();\n//     // this.state = {\n//     //   isLike: false,\n//     // }\n//   // }\n//   state = {\n//     email: '',\n//     password: ''\n//   };\n//   // Refs\n//   // 可以访问dom组件和自定义组件\n//   // ref属性不能用在函数式声明的组件上(Header)，因为函数声明的组件没有实例\n//   // emailRef = React.createRef();\n//   // passwordRef = React.createRef();\n//   handleSubmit = event => {\n//     // 1. 阻止默认事件行为\n//     event.preventDefault();\n//     // 2. 获取表单数据\n//     // const formData = {\n//       // email: this.emailRef.current.value,\n//       // password: this.passwordRef.current.value\n//     // }\n//     console.log(this.state);\n//     // 3. 处理登录逻辑\n//     // 4. 跳转到首页视图\n//     // this.props.history.push('/');\n//   }\n//   handleChange = e => {\n//     this.setState({\n//       [e.target.name]: e.target.value,\n//     });\n//   }\n//   render() {\n//     return (\n//       <div className=\"login-wrapper\"> \n//         <form action=\"\" className=\"box login-box\" onSubmit={this.handleSubmit}>\n//           <div className=\"field\">\n//             <label className=\"label\">Name</label>\n//             <div className=\"control\">\n//               <input class=\"input\" type=\"text\" placeholder=\"Name\" />\n//             </div>\n//           </div>  \n//           <div className=\"field\">\n//             <label className=\"label\">Email</label>\n//             < div className=\"control\">\n//               <input \n//                 class=\"input\" \n//                 type=\"text\" \n//                 placeholder=\"Email\" \n//                 name=\"email\"\n//                 value={this.state.email}\n//                 onChange={this.handleChange}\n//                 // ref={this.emailRef} \n//               />\n//             </div>\n//          </div>\n//           <div className=\"field\">\n//             <label className=\"label\">Password</label>\n//             <div className=\"control\">\n//               <input \n//                 class=\"input\" \n//                 type=\"text\" \n//                 placeholder=\"Password\" \n//                 name=\"password\"\n//                 value={this.state.password}\n//                 onChange={this.handleChange}\n//                 // ref={this.passwordRef} \n//               />\n//             </div>\n//           </div>\n//           <div className=\"control\">\n//             <button className=\"button is-fullwidth is-primary\">Login</button>\n//           </div>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n//  export default Login","map":{"version":3,"sources":["/Users/zhangyuanhang/Desktop/sneaker-shop/src/pages/Login.js"],"names":["React","useForm","Login","props","register","handleSubmit","errors","onSubmit","data","console","log","email"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\n\n\n// react-hook-form 需要在函数式组件中使用\nexport default function Login(props) {\n\n  const { register, handleSubmit, errors } = useForm(); \n  const onSubmit = data => {\n    // 1. 阻止默认事件行为，组件帮助处理\n    // event.preventDefault();\n    // 2. 获取表单数据\n    // const formData = {\n      // email: this.emailRef.current.value,\n      // password: this.passwordRef.current.value\n    // }\n    console.log(data);\n    // 3. 处理登录逻辑\n\n    // 4. 跳转到首页视图\n    // this.props.history.push('/');\n  }\n  console.log(errors);\n\n  return (\n    <div className=\"login-wrapper\"> \n        <form action=\"\" className=\"box login-box\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            < div className=\"control\">\n              <input \n                className={`input ${errors.email} && 'is-danger'`} \n                type=\"text\" \n                placeholder=\"Email\" \n                name=\"email\"\n                ref={register}\n                // value={this.state.email}\n                // onChange={this.handleChange}\n                // ref={this.emailRef} \n              />\n              {\n                errors.email && <p className=\"helper has-text-danger\">email is required</p> \n              }\n            </div>\n         </div>\n          <div className=\"field\">\n            <label className=\"label\">Password</label>\n            <div className=\"control\">\n              <input \n                className=\"input\" \n                type=\"text\" \n                placeholder=\"Password\" \n                name=\"password\"\n                ref={register}\n                // value={this.state.password}\n                // onChange={this.handleChange}\n                // ref={this.passwordRef} \n              />\n              {\n                errors.email && <p className=\"helper has-text-danger\">password is required</p> \n              }\n            </div>\n          </div>\n          <div className=\"control\">\n            <button className=\"button is-fullwidth is-primary\">Login</button>\n          </div>\n        </form>\n      </div>\n  );\n};\n\n\n// class Login extends React.Component {\n\n//   // 受控组件和非受控组件\n//   // State\n//   // 可以在constructor中用this.state = {}定义，也可以在外部用state = {}定义\n//   // constructor() {\n//   //   super();\n//     // this.state = {\n//     //   isLike: false,\n//     // }\n//   // }\n//   state = {\n//     email: '',\n//     password: ''\n//   };\n\n//   // Refs\n//   // 可以访问dom组件和自定义组件\n//   // ref属性不能用在函数式声明的组件上(Header)，因为函数声明的组件没有实例\n//   // emailRef = React.createRef();\n//   // passwordRef = React.createRef();\n\n//   handleSubmit = event => {\n//     // 1. 阻止默认事件行为\n//     event.preventDefault();\n//     // 2. 获取表单数据\n//     // const formData = {\n//       // email: this.emailRef.current.value,\n//       // password: this.passwordRef.current.value\n//     // }\n//     console.log(this.state);\n//     // 3. 处理登录逻辑\n\n//     // 4. 跳转到首页视图\n//     // this.props.history.push('/');\n//   }\n\n//   handleChange = e => {\n//     this.setState({\n//       [e.target.name]: e.target.value,\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"login-wrapper\"> \n//         <form action=\"\" className=\"box login-box\" onSubmit={this.handleSubmit}>\n//           <div className=\"field\">\n//             <label className=\"label\">Name</label>\n//             <div className=\"control\">\n//               <input class=\"input\" type=\"text\" placeholder=\"Name\" />\n//             </div>\n//           </div>  \n//           <div className=\"field\">\n//             <label className=\"label\">Email</label>\n//             < div className=\"control\">\n//               <input \n//                 class=\"input\" \n//                 type=\"text\" \n//                 placeholder=\"Email\" \n//                 name=\"email\"\n//                 value={this.state.email}\n//                 onChange={this.handleChange}\n//                 // ref={this.emailRef} \n//               />\n//             </div>\n//          </div>\n//           <div className=\"field\">\n//             <label className=\"label\">Password</label>\n//             <div className=\"control\">\n//               <input \n//                 class=\"input\" \n//                 type=\"text\" \n//                 placeholder=\"Password\" \n//                 name=\"password\"\n//                 value={this.state.password}\n//                 onChange={this.handleChange}\n//                 // ref={this.passwordRef} \n//               />\n//             </div>\n//           </div>\n//           <div className=\"control\">\n//             <button className=\"button is-fullwidth is-primary\">Login</button>\n//           </div>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n//  export default Login"]},"metadata":{},"sourceType":"module"}
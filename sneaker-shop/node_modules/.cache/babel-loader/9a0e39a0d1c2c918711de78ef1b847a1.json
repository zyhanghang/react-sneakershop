{"ast":null,"code":"var _jsxFileName = \"/Users/zhangyuanhang/Desktop/sneaker-shop/src/components/Products.js\";\nimport React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport axios from 'commons/axios';\nimport ToolBox from 'components/ToolBox';\nimport Product from 'components/Product';\nimport Panel from 'components/Panel';\nimport AddInventory from 'components/AddInventory';\n\nclass Products extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // products是一个数组\n      products: [],\n      sourceProducts: [],\n      cartNum: 0\n    };\n\n    this.search = text => {\n      console.log(text); // 1. Copy，如果使用 const _products = this.state.products，原数组也会改变\n\n      let _products = [...this.state.sourceProducts]; // 2. Filter\n\n      _products = _products.filter(p => {\n        const matchArray = p.name.match(new RegExp(text, 'gi'));\n        return !!matchArray;\n      }); // 3. Set State\n\n      this.setState({\n        products: _products\n      });\n    };\n\n    this.toAdd = () => {\n      Panel.open({\n        component: AddInventory,\n        callback: data => {\n          if (data) {\n            this.add(data);\n          }\n\n          console.log(data + 'in products component');\n        }\n      });\n    };\n\n    this.add = product => {\n      const _products = [...this.state.products];\n\n      _products.push(product);\n\n      const _sProducts = [...this.state.sourceProducts];\n\n      _sProducts.push(product);\n\n      this.setState({\n        products: _products,\n        sourceProducts: _sProducts\n      });\n    };\n\n    this.update = product => {\n      const _products = [...this.state.products];\n\n      const _index = _products.findIndex(p => p.id === product.id); //splice函数替换数组中某一项\n\n\n      _products.splice(_index, 1, product);\n\n      const _sProducts = [...this.state.sourceProducts];\n\n      const _sIndex = _products.findIndex(p => p.id === product.id);\n\n      _sProducts.splice(_sIndex, 1, product);\n\n      this.setState({\n        products: _products,\n        sourceProducts: _sProducts\n      });\n    };\n\n    this.delete = id => {\n      const _products = this.state.products.filter(p => p.id !== id);\n\n      const _sProducts = this.state.sourceProducts.filter(p => p.id !== id);\n\n      this.setState({\n        products: _products,\n        sourceProducts: _sProducts\n      });\n    };\n\n    this.updateCartNum = async () => {\n      const cartNum = await this.initCartNum();\n      this.setState({\n        cartNum: cartNum\n      });\n    };\n\n    this.initCartNum = async () => {\n      const user = global.auth.getUser() || {};\n      const res = await axios.get(`/carts`, {\n        params: {\n          userId: user.email\n        }\n      });\n      const carts = res.data || [];\n      const cartNumArr = carts.map(cart => cart.amount);\n\n      const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n      const cartNum = cartNumArr.reduce(reducer, 0);\n      return cartNum;\n    };\n\n    this.renderManagerBtn = () => {\n      const user = global.auth.getUser() || {};\n\n      if (user.type === 1) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: \"button is-primary add-btn\",\n          onClick: this.toAdd,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 9\n          }\n        }, \"add\");\n      }\n    };\n  }\n\n  // 生命周期函数，初次渲染完成执行\n  componentDidMount() {\n    axios.get('/products').then(response => {\n      this.setState({\n        products: response.data,\n        sourceProducts: response.data\n      });\n    });\n    this.updateCartNum();\n  }\n\n  //什么时候重新执行render函数: state或props变化\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ToolBox, {\n      search: this.search,\n      cartNum: this.state.cartNum,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"products\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns is-multiline is-desktop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TransitionGroup, {\n      component: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, this.state.products.map(p => {\n      return /*#__PURE__*/React.createElement(CSSTransition, {\n        classNames: \"product-fade\",\n        timeout: {\n          enter: 300,\n          exit: 300\n        },\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column is-3\",\n        key: p.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Product, {\n        product: p,\n        update: this.update,\n        delete: this.delete,\n        updateCartNum: this.updateCartNum,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      })));\n    }))), this.renderManagerBtn()));\n  }\n\n}\n\nexport default Products;","map":{"version":3,"sources":["/Users/zhangyuanhang/Desktop/sneaker-shop/src/components/Products.js"],"names":["React","TransitionGroup","CSSTransition","axios","ToolBox","Product","Panel","AddInventory","Products","Component","state","products","sourceProducts","cartNum","search","text","console","log","_products","filter","p","matchArray","name","match","RegExp","setState","toAdd","open","component","callback","data","add","product","push","_sProducts","update","_index","findIndex","id","splice","_sIndex","delete","updateCartNum","initCartNum","user","global","auth","getUser","res","get","params","userId","email","carts","cartNumArr","map","cart","amount","reducer","accumulator","currentValue","reduce","renderManagerBtn","type","componentDidMount","then","response","render","enter","exit"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport axios from 'commons/axios';\nimport ToolBox from 'components/ToolBox';\nimport Product from 'components/Product';\nimport Panel from 'components/Panel';\nimport AddInventory from 'components/AddInventory';\n\n\n\nclass Products extends React.Component {\n\n  state = {\n    // products是一个数组\n    products: [],\n    sourceProducts: [],\n    cartNum: 0\n  };\n\n  \n  // 生命周期函数，初次渲染完成执行\n  componentDidMount() {\n    axios.get('/products')\n    .then(response => {\n      this.setState({\n        products: response.data,\n        sourceProducts: response.data\n      });\n    })\n    this.updateCartNum();\n  }\n  \n  search = text => {\n    console.log(text);\n    // 1. Copy，如果使用 const _products = this.state.products，原数组也会改变\n    let _products = [...this.state.sourceProducts]\n    // 2. Filter\n    _products = _products.filter(p => {\n      const matchArray = p.name.match(new RegExp(text, 'gi'))\n      return !!matchArray\n    })\n    // 3. Set State\n    this.setState({\n      products: _products\n    });\n  }\n  \n  toAdd = () => {\n    Panel.open({\n      component: AddInventory,\n      callback: data => {\n        if (data) {\n          this.add(data);\n        }\n        console.log(data + 'in products component');\n      }\n    });\n  }\n  \n  add = product => {\n    const _products = [...this.state.products]\n    _products.push(product)\n    const _sProducts = [...this.state.sourceProducts]\n    _sProducts.push(product)\n    this.setState({\n      products: _products,\n      sourceProducts: _sProducts\n    })\n  }\n  \n  update = product => {\n    const _products = [...this.state.products]\n    const _index = _products.findIndex(p => p.id === product.id)\n    //splice函数替换数组中某一项\n    _products.splice(_index, 1, product)\n    const _sProducts = [...this.state.sourceProducts]\n    const _sIndex = _products.findIndex(p => p.id === product.id)\n    _sProducts.splice(_sIndex, 1, product)\n    this.setState({\n      products: _products,\n      sourceProducts: _sProducts\n    })\n  }\n  \n  delete = id => {\n    const _products = this.state.products.filter(p => p.id !== id)\n    const _sProducts = this.state.sourceProducts.filter(p => p.id !== id)\n    this.setState({\n      products: _products,\n      sourceProducts: _sProducts\n    })\n  }\n  \n  // ToolBox 和 Product 是兄弟组件，通过共同的父组件进行通讯\n  updateCartNum = async() => {\n    const cartNum = await this.initCartNum();\n    this.setState({\n      cartNum: cartNum\n    })\n  }\n\n  initCartNum = async() => {\n    const user = global.auth.getUser() || {};\n    const res = await axios.get(`/carts`, {\n      params: {\n        userId: user.email\n      }\n    });\n    const carts = res.data || [];\n    const cartNumArr = carts.map(cart => cart.amount);\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\n    const cartNum = cartNumArr.reduce(reducer, 0);\n    return cartNum;\n  }\n\n  renderManagerBtn = () => {\n    const user = global.auth.getUser() || {};\n    if (user.type === 1) {\n      return (\n        <button className=\"button is-primary add-btn\" onClick={this.toAdd}>add</button>\n      )\n    }\n  }\n\n  //什么时候重新执行render函数: state或props变化\n  render() {\n    return (\n      <div>\n        <ToolBox search={this.search} cartNum={this.state.cartNum} />\n        <div className=\"products\">\n          <div className=\"columns is-multiline is-desktop\">\n            <TransitionGroup component={null}>\n              {\n                this.state.products.map(p => {\n                  return (\n                    <CSSTransition classNames=\"product-fade\" timeout={{enter: 300, exit: 300}} key={p.id}>\n                      <div className=\"column is-3\" key={p.id}>\n                        {/* 向 Product 组件传递函数 */}\n                        <Product \n                          product={p} \n                          update={this.update} \n                          delete={this.delete} \n                          updateCartNum={this.updateCartNum} \n                        />\n                      </div>\n                    </CSSTransition>\n                  )\n                })\n              }\n            </TransitionGroup>\n          </div>\n          {/* <button className=\"button is-primary add-btn\" onClick={this.toAdd}>add</button> */}\n          {this.renderManagerBtn()}\n        </div>\n      </div>\n    )\n  }\n} \n\nexport default Products;"]},"metadata":{},"sourceType":"module"}
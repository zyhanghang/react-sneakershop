{"ast":null,"code":"var _jsxFileName = \"/Users/zhangyuanhang/Desktop/sneaker-shop/src/pages/Register.js\";\nimport React from 'react';\nimport axios from 'commons/axios';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-toastify'; // react-hook-form 需要在函数式组件中使用\n\nexport default function Login(props) {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n\n  const onSubmit = async data => {\n    // 1. 阻止默认事件行为，组件帮助处理\n    // event.preventDefault();\n    // 2. 获取表单数据\n    // const formData = {\n    // email: this.emailRef.current.value,\n    // password: this.passwordRef.current.value\n    // }\n    // 3. 处理登录逻辑\n    try {\n      const {\n        email,\n        password\n      } = data;\n      const res = await axios.post('/auth/login', {\n        email,\n        password\n      });\n      const jwToken = res.data;\n      global.auth.setToken(jwToken);\n      toast.success('Login Success'); // 4. 跳转到首页视图\n\n      props.history.push('/');\n    } catch (error) {\n      const message = error.response.data.message;\n      toast.error(message);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    className: \"box login-box\",\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Nickname\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.nickname && 'is-danger'}`,\n    type: \"text\",\n    placeholder: \"Nickname\",\n    name: \"nickname\",\n    ref: register({\n      required: 'nickname is required'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }), errors.nickname && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 37\n    }\n  }, errors.nickname.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.email && 'is-danger'}`,\n    type: \"text\",\n    placeholder: \"Email\",\n    name: \"email\",\n    ref: register({\n      required: 'email is required',\n      pattern: {\n        value: /^[A-Za-z0-9]+([_\\\\.][A-Za-z0-9]+)*@([A-Za-z0-9\\\\-]+\\.)+[A-Za-z]{2,6}$/,\n        message: 'invalid email'\n      }\n    }) // value={this.state.email}\n    // onChange={this.handleChange}\n    // ref={this.emailRef} \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 34\n    }\n  }, errors.email.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `input ${errors.password && 'is-danger'}`,\n    type: \"text\",\n    placeholder: \"Password\",\n    name: \"password\",\n    ref: register({\n      required: 'password is required',\n      minLength: {\n        value: 6,\n        message: 'password cannot be less than 6 digits'\n      }\n    }) // value={this.state.password}\n    // onChange={this.handleChange}\n    // ref={this.passwordRef} \n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"helper has-text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }, errors.password.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button is-fullwidth is-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Submit\"))));\n}\n; // class Login extends React.Component {\n//   // 受控组件和非受控组件\n//   // State\n//   // 可以在constructor中用this.state = {}定义，也可以在外部用state = {}定义\n//   // constructor() {\n//   //   super();\n//     // this.state = {\n//     //   isLike: false,\n//     // }\n//   // }\n//   state = {\n//     email: '',\n//     password: ''\n//   };\n//   // Refs\n//   // 可以访问dom组件和自定义组件\n//   // ref属性不能用在函数式声明的组件上(Header)，因为函数声明的组件没有实例\n//   // emailRef = React.createRef();\n//   // passwordRef = React.createRef();\n//   handleSubmit = event => {\n//     // 1. 阻止默认事件行为\n//     event.preventDefault();\n//     // 2. 获取表单数据\n//     // const formData = {\n//       // email: this.emailRef.current.value,\n//       // password: this.passwordRef.current.value\n//     // }\n//     console.log(this.state);\n//     // 3. 处理登录逻辑\n//     // 4. 跳转到首页视图\n//     // this.props.history.push('/');\n//   }\n//   handleChange = e => {\n//     this.setState({\n//       [e.target.name]: e.target.value,\n//     });\n//   }\n//   render() {\n//     return (\n//       <div className=\"login-wrapper\"> \n//         <form action=\"\" className=\"box login-box\" onSubmit={this.handleSubmit}>\n//           <div className=\"field\">\n//             <label className=\"label\">Name</label>\n//             <div className=\"control\">\n//               <input class=\"input\" type=\"text\" placeholder=\"Name\" />\n//             </div>\n//           </div>  \n//           <div className=\"field\">\n//             <label className=\"label\">Email</label>\n//             < div className=\"control\">\n//               <input \n//                 class=\"input\" \n//                 type=\"text\" \n//                 placeholder=\"Email\" \n//                 name=\"email\"\n//                 value={this.state.email}\n//                 onChange={this.handleChange}\n//                 // ref={this.emailRef} \n//               />\n//             </div>\n//          </div>\n//           <div className=\"field\">\n//             <label className=\"label\">Password</label>\n//             <div className=\"control\">\n//               <input \n//                 class=\"input\" \n//                 type=\"text\" \n//                 placeholder=\"Password\" \n//                 name=\"password\"\n//                 value={this.state.password}\n//                 onChange={this.handleChange}\n//                 // ref={this.passwordRef} \n//               />\n//             </div>\n//           </div>\n//           <div className=\"control\">\n//             <button className=\"button is-fullwidth is-primary\">Login</button>\n//           </div>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n//  export default Login","map":{"version":3,"sources":["/Users/zhangyuanhang/Desktop/sneaker-shop/src/pages/Register.js"],"names":["React","axios","useForm","toast","Login","props","register","handleSubmit","errors","onSubmit","data","email","password","res","post","jwToken","global","auth","setToken","success","history","push","error","message","response","nickname","required","pattern","value","minLength"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'commons/axios';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-toastify';\n\n\n// react-hook-form 需要在函数式组件中使用\nexport default function Login(props) {\n\n  const { register, handleSubmit, errors } = useForm(); \n  const onSubmit = async data => {\n    // 1. 阻止默认事件行为，组件帮助处理\n    // event.preventDefault();\n    // 2. 获取表单数据\n    // const formData = {\n      // email: this.emailRef.current.value,\n      // password: this.passwordRef.current.value\n    // }\n    \n    // 3. 处理登录逻辑\n    try {\n      const { email, password } = data;\n      const res = await axios.post('/auth/login', { email, password });\n      const jwToken = res.data;\n      global.auth.setToken(jwToken)\n      toast.success('Login Success');\n      // 4. 跳转到首页视图\n      props.history.push('/');\n    } catch (error) {\n      const message = error.response.data.message;\n      toast.error(message);\n    }\n  }\n\n  return (\n    <div className=\"login-wrapper\"> \n        <form action=\"\" className=\"box login-box\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"field\">\n            <label className=\"label\">Nickname</label>\n            < div className=\"control\">\n              <input \n                className={`input ${errors.nickname && 'is-danger'}`} \n                type=\"text\" \n                placeholder=\"Nickname\" \n                name=\"nickname\"\n                ref={register({\n                  required: 'nickname is required',\n                })}\n              />\n              {\n                errors.nickname && (<p className=\"helper has-text-danger\">{errors.nickname.message}</p>) \n              }\n            </div>\n         </div>\n          <div className=\"field\">\n            <label className=\"label\">Email</label>\n            < div className=\"control\">\n              <input \n                className={`input ${errors.email && 'is-danger'}`} \n                type=\"text\" \n                placeholder=\"Email\" \n                name=\"email\"\n                ref={register({\n                  required: 'email is required',\n                  pattern: {\n                    value: /^[A-Za-z0-9]+([_\\\\.][A-Za-z0-9]+)*@([A-Za-z0-9\\\\-]+\\.)+[A-Za-z]{2,6}$/,\n                    message: 'invalid email'\n                  }\n                })}\n                // value={this.state.email}\n                // onChange={this.handleChange}\n                // ref={this.emailRef} \n              />\n              {\n                errors.email && (<p className=\"helper has-text-danger\">{errors.email.message}</p>) \n              }\n            </div>\n         </div>\n          <div className=\"field\">\n            <label className=\"label\">Password</label>\n            <div className=\"control\">\n              <input \n                className={`input ${errors.password && 'is-danger'}`}\n                type=\"text\" \n                placeholder=\"Password\" \n                name=\"password\"\n                ref={register({\n                  required: 'password is required',\n                  minLength: {\n                    value: 6,\n                    message: 'password cannot be less than 6 digits'\n                  }\n                })}\n                // value={this.state.password}\n                // onChange={this.handleChange}\n                // ref={this.passwordRef} \n              />\n              {\n                errors.password && (<p className=\"helper has-text-danger\">{errors.password.message}</p>) \n              }\n            </div>\n          </div>\n          <div className=\"control\">\n            <button className=\"button is-fullwidth is-primary\">Submit</button>\n          </div>\n        </form>\n      </div>\n  );\n};\n\n\n// class Login extends React.Component {\n\n//   // 受控组件和非受控组件\n//   // State\n//   // 可以在constructor中用this.state = {}定义，也可以在外部用state = {}定义\n//   // constructor() {\n//   //   super();\n//     // this.state = {\n//     //   isLike: false,\n//     // }\n//   // }\n//   state = {\n//     email: '',\n//     password: ''\n//   };\n\n//   // Refs\n//   // 可以访问dom组件和自定义组件\n//   // ref属性不能用在函数式声明的组件上(Header)，因为函数声明的组件没有实例\n//   // emailRef = React.createRef();\n//   // passwordRef = React.createRef();\n\n//   handleSubmit = event => {\n//     // 1. 阻止默认事件行为\n//     event.preventDefault();\n//     // 2. 获取表单数据\n//     // const formData = {\n//       // email: this.emailRef.current.value,\n//       // password: this.passwordRef.current.value\n//     // }\n//     console.log(this.state);\n//     // 3. 处理登录逻辑\n\n//     // 4. 跳转到首页视图\n//     // this.props.history.push('/');\n//   }\n\n//   handleChange = e => {\n//     this.setState({\n//       [e.target.name]: e.target.value,\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"login-wrapper\"> \n//         <form action=\"\" className=\"box login-box\" onSubmit={this.handleSubmit}>\n//           <div className=\"field\">\n//             <label className=\"label\">Name</label>\n//             <div className=\"control\">\n//               <input class=\"input\" type=\"text\" placeholder=\"Name\" />\n//             </div>\n//           </div>  \n//           <div className=\"field\">\n//             <label className=\"label\">Email</label>\n//             < div className=\"control\">\n//               <input \n//                 class=\"input\" \n//                 type=\"text\" \n//                 placeholder=\"Email\" \n//                 name=\"email\"\n//                 value={this.state.email}\n//                 onChange={this.handleChange}\n//                 // ref={this.emailRef} \n//               />\n//             </div>\n//          </div>\n//           <div className=\"field\">\n//             <label className=\"label\">Password</label>\n//             <div className=\"control\">\n//               <input \n//                 class=\"input\" \n//                 type=\"text\" \n//                 placeholder=\"Password\" \n//                 name=\"password\"\n//                 value={this.state.password}\n//                 onChange={this.handleChange}\n//                 // ref={this.passwordRef} \n//               />\n//             </div>\n//           </div>\n//           <div className=\"control\">\n//             <button className=\"button is-fullwidth is-primary\">Login</button>\n//           </div>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n//  export default Login"]},"metadata":{},"sourceType":"module"}